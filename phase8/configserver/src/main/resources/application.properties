# This helps us identify microservices
spring.application.name=configserver

# native tells configserver that we're reading from file system inside of classpath or server
#spring.profiles.active=native
spring.profiles.active=git

# Read configurations from different locations:
#spring.cloud.config.server.native.search-locations=classpath:/config
#spring.cloud.config.server.native.search-locations=file:///C://config
spring.cloud.config.server.git.uri=https://github.com/sophiagavrila/credit-microservices-config.git
spring.cloud.config.server.git.clone-on-start=true
spring.cloud.config.server.git.default-label=main


# The port where our config server app will run
server.port=8071

# By default, for performance issues, Sleuth will send only 10% of the logs to Zipkin
# Here we set it to 100% (if you want 50% you write 0.5)
spring.sleuth.sampler.percentage=1
# This is the endpoint to send the logs 
spring.zipkin.baseUrl=http://localhost:9411/

spring.zipkin.sender.type=rabbit
spring.zipkin.rabbitmq.queue=zipkin
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest